# File managed by Puppet 

[main]
  vardir      = <%= scope.lookupvar('puppet::data_dir') %>
  logdir      = <%= scope.lookupvar('puppet::log_dir') %>
  rundir      = <%= scope.lookupvar('puppet::run_dir') %>
  templatedir = <%= scope.lookupvar('puppet::template_dir') %>
  ssldir      = <%= scope.lookupvar('puppet::ssl_dir') %>
  usecacheonfailure = true
  user = <%= scope.lookupvar('puppet::process_user_server') %>
  group = <%= scope.lookupvar('puppet::process_user_server') %>
<% if scope.lookupvar('puppet::prerun_command') != '' -%>
  prerun_command = "<%= scope.lookupvar('puppet::prerun_command') -%>"
<% end -%>
<% if scope.lookupvar('puppet::postrun_command') != '' -%>
  postrun_command = "<%= scope.lookupvar('puppet::postrun_command') -%>"
<% end -%>
<% if scope.lookupvar('puppet::nodetool') == "foreman" -%>
  privatekeydir = $ssldir/private_keys { group = service }
  hostprivkey = $privatekeydir/$certname.pem { mode = 640 }
<% end -%>

<% if scope.lookupvar('puppet::params::major_version') == "0.2" -%># [puppet]<% else -%># [user]<% end %>

<% if scope.lookupvar('puppet::params::major_version') == "0.2" -%>[puppetd]<% else -%>[agent]<% end %>
  certname = <%= scope.lookupvar('clientcert') %>
  server = <%= scope.lookupvar('puppet::server') %>
  pluginsync = true
  report = true
  reportserver = <%= scope.lookupvar('puppet::server') %>
  summarize = true
  graph = true
  listen = <%= scope.lookupvar('puppet::bool_listen') %>
  runinterval = <%= scope.lookupvar('puppet::runinterval') %>
  localconfig = $vardir/localconfig

<% if scope.lookupvar('puppet::params::major_version') == "0.2" -%>[puppetmasterd]<% else -%>[master]<% end %>
  masterport = <%= scope.lookupvar('puppet::port') %>
<% if scope.lookupvar('puppet::bindaddress') != '' -%>
  bindaddress = <%= scope.lookupvar('puppet::bindaddress') %>
<% end -%>
<% if scope.lookupvar('puppet::bool_passenger') == true && scope.lookupvar('puppet::passenger_type') != 'nginx' -%>
  ssl_client_header = SSL_CLIENT_S_DN
  ssl_client_verify_header = SSL_CLIENT_VERIFY
<% end -%>
  autosign = <%= scope.lookupvar('puppet::autosign') %>
<% if scope.lookupvar('puppet::bool_storeconfigs') == true or scope.lookupvar('puppet::db') == "puppetdb" -%>
  storeconfigs = true
<% if scope.lookupvar('puppet::bool_storeconfigs_thin') == true and scope.lookupvar('puppet::db') != "puppetdb" %>
  thin_storeconfigs = true
<% end -%>
<% end -%>

  environment = <%= scope.lookupvar('puppet::environment') %>
  manifest    = <%= scope.lookupvar('puppet::manifest_path') %>
  modulepath  = <%= scope.lookupvar('puppet::module_path') %>

<% if scope.lookupvar('puppet::dns_alt_names') != '' -%>
  dns_alt_names = <%= scope.lookupvar('puppet::dns_alt_names') %>
<% end -%>

<% if scope.lookupvar('puppet::db') == "sqlite" -%>
  # Sets SQLite database backend
  dbadapter = sqlite3
  dblocation = <%= scope.lookupvar('puppet::data_dir') %>/storeconfigs.sqlite
<% end -%>
<% if scope.lookupvar('puppet::db') == "mysql" -%>
  # Sets MySQL database backend
  dbadapter = mysql
  dbname = <%= scope.lookupvar('puppet::db_name') %>
  dbserver = <%= scope.lookupvar('puppet::db_server') %>
  dbuser = <%= scope.lookupvar('puppet::db_user') %>
  dbpassword = <%= scope.lookupvar('puppet::db_password') %>
<% end -%>
<% if scope.lookupvar('puppet::db') == "puppetdb" -%>
  # Sets PuppetDB database backend
  storeconfigs_backend = puppetdb
<% end -%>

  # Reporting
  reports = <%= scope.lookupvar('puppet::reports_value') %>
<% if scope.lookupvar('puppet::reporturl') != '' -%>
  reporturl = <%= scope.lookupvar('puppet::reporturl') %>
<% end -%>

<% if scope.lookupvar('puppet::inventoryserver') == "localhost" -%>
  # Local Inventory Service 
  facts_terminus = active_record
<% else -%>
<% if scope.lookupvar('puppet::inventoryserver') != "" -%>
  # Remote Inventory Service
  facts_terminus = rest
  inventory_server = <%= scope.lookupvar('puppet::inventoryserver') %>
  inventory_port = 8140
<% end -%>
<% end -%>

<% if scope.lookupvar('puppet::bool_externalnodes') == true -%>
  # Activate external node classifier 
  external_nodes = /etc/puppet/node.rb
  node_terminus = exec
<% end -%>
